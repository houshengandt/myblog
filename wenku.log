Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.001) QUERY = 'SELECT "blog_article"."id", "blog_article"."title", "blog_article"."body", "blog_article"."pub_time", "blog_article"."abstract", "blog_article"."view_times" FROM "blog_article" ORDER BY "blog_article"."id" DESC' - PARAMS = (); args=()
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT "blog_tags"."id", "blog_tags"."tag_name" FROM "blog_tags" INNER JOIN "blog_tags_article" ON ( "blog_tags"."id" = "blog_tags_article"."tags_id" ) WHERE "blog_tags_article"."article_id" = %s' - PARAMS = (2,); args=(2,)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT "blog_tags"."id", "blog_tags"."tag_name" FROM "blog_tags" INNER JOIN "blog_tags_article" ON ( "blog_tags"."id" = "blog_tags_article"."tags_id" ) WHERE "blog_tags_article"."article_id" = %s' - PARAMS = (1,); args=(1,)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT "blog_tags"."id", "blog_tags"."tag_name" FROM "blog_tags"' - PARAMS = (); args=()
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT COUNT(%s) AS "__count" FROM "blog_article" INNER JOIN "blog_tags_article" ON ( "blog_article"."id" = "blog_tags_article"."article_id" ) WHERE "blog_tags_article"."tags_id" = %s' - PARAMS = ('*', 1); args=('*', 1)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT COUNT(%s) AS "__count" FROM "blog_article" INNER JOIN "blog_tags_article" ON ( "blog_article"."id" = "blog_tags_article"."article_id" ) WHERE "blog_tags_article"."tags_id" = %s' - PARAMS = ('*', 2); args=('*', 2)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT COUNT(%s) AS "__count" FROM "blog_article" INNER JOIN "blog_tags_article" ON ( "blog_article"."id" = "blog_tags_article"."article_id" ) WHERE "blog_tags_article"."tags_id" = %s' - PARAMS = ('*', 3); args=('*', 3)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT COUNT(%s) AS "__count" FROM "blog_article" INNER JOIN "blog_tags_article" ON ( "blog_article"."id" = "blog_tags_article"."article_id" ) WHERE "blog_tags_article"."tags_id" = %s' - PARAMS = ('*', 4); args=('*', 4)
Thu, 02 Feb 2017 20:45:27 utils.py[line:89] DEBUG (0.000) QUERY = 'SELECT DISTINCT django_datetime_trunc(\'month\', "blog_article"."pub_time", %s) AS "datetimefield" FROM "blog_article" WHERE "blog_article"."pub_time" IS NOT NULL ORDER BY "datetimefield" DESC' - PARAMS = ('Asia/Shanghai',); args=('Asia/Shanghai',)
Thu, 02 Feb 2017 20:46:18 utils.py[line:89] DEBUG (0.001) QUERY = 'SELECT "wenkucheckin_baiduuser"."id", "wenkucheckin_baiduuser"."username", "wenkucheckin_baiduuser"."password", "wenkucheckin_baiduuser"."check_in_times", "wenkucheckin_baiduuser"."wealth", "wenkucheckin_baiduuser"."ticket", "wenkucheckin_baiduuser"."last_checkin_time" FROM "wenkucheckin_baiduuser"' - PARAMS = (); args=()
Thu, 02 Feb 2017 20:46:33 utils.py[line:89] DEBUG (0.001) QUERY = 'SELECT "wenkucheckin_baiduuser"."id", "wenkucheckin_baiduuser"."username", "wenkucheckin_baiduuser"."password", "wenkucheckin_baiduuser"."check_in_times", "wenkucheckin_baiduuser"."wealth", "wenkucheckin_baiduuser"."ticket", "wenkucheckin_baiduuser"."last_checkin_time" FROM "wenkucheckin_baiduuser" WHERE "wenkucheckin_baiduuser"."username" = %s' - PARAMS = ('18202420105',); args=('18202420105',)
Thu, 02 Feb 2017 20:46:34 connectionpool.py[line:213] INFO Starting new HTTP connection (1): yun.baidu.com
Thu, 02 Feb 2017 20:46:34 connectionpool.py[line:395] DEBUG "GET / HTTP/1.1" 404 None
Thu, 02 Feb 2017 20:46:34 connectionpool.py[line:788] INFO Starting new HTTPS connection (1): passport.baidu.com
Thu, 02 Feb 2017 20:46:35 connectionpool.py[line:395] DEBUG "GET /v2/api/?getapi&tpl=mn&apiver=v3&tt=1486039594206&class=login&gid=8D323CE-4844-45B5-843C-013853A7F536&logintype=dialogLogin&callback=bd__cbs__9m2f3k HTTP/1.1" 200 382
Thu, 02 Feb 2017 20:46:35 connectionpool.py[line:395] DEBUG "GET /v2/api/?logincheck&token=839cd259f21d6c9b165ecc228cf1a903&tpl=mn&apiver=v3&tt=1486039595552&sub_source=leadsetpwd&username=18202420105&isphone=false&callback=bd__cbs__fbse3a HTTP/1.1" 200 261
Thu, 02 Feb 2017 20:46:35 connectionpool.py[line:395] DEBUG "GET /v2/getpublickey?token=839cd259f21d6c9b165ecc228cf1a903&tpl=mn&apiver=v3&tt=1486039595754&gid=8D323CE-4844-45B5-843C-013853A7F536&callback=bd__cbs__q2j610 HTTP/1.1" 200 375
Thu, 02 Feb 2017 20:46:35 _Numbers_gmp.py[line:230] WARNING C:\Python34\lib\site-packages\Cryptodome\Math\_Numbers_gmp.py:230: UserWarning: implicit cast to 'char *' from a different pointer type: will be forbidden in the future (check that the types are as you expect; use an explicit ffi.cast() if they are correct)
  _gmp.gmp_snprintf(buf, c_size_t(buf_len), b("%Zd"), self._mpz_p)

Thu, 02 Feb 2017 20:46:35 connectionpool.py[line:395] DEBUG "GET /cgi-bin/genimage?tcG6207c1799f9cc17f02a114bc44012331a6cb430744047fa3 HTTP/1.1" 200 None
Thu, 02 Feb 2017 20:46:35 utils.py[line:89] DEBUG (0.000) QUERY = 'BEGIN' - PARAMS = (); args=None
Thu, 02 Feb 2017 20:46:35 utils.py[line:89] DEBUG (0.001) QUERY = 'INSERT INTO "wenkucheckin_baiduuser" ("username", "password", "check_in_times", "wealth", "ticket", "last_checkin_time") VALUES (%s, %s, %s, %s, %s, %s)' - PARAMS = ('18202420105', 'wsmsdcx', 0, 0, 0, '20:46:35.963028'); args=['18202420105', 'wsmsdcx', 0, 0, 0, '20:46:35.963028']
Thu, 02 Feb 2017 20:48:15 connectionpool.py[line:788] INFO Starting new HTTPS connection (1): passport.baidu.com
Thu, 02 Feb 2017 20:48:15 connectionpool.py[line:395] DEBUG "POST /v2/api/?login HTTP/1.1" 200 None
Thu, 02 Feb 2017 20:48:16 utils.py[line:89] DEBUG (0.001) QUERY = 'SELECT "wenkucheckin_baiduuser"."id", "wenkucheckin_baiduuser"."username", "wenkucheckin_baiduuser"."password", "wenkucheckin_baiduuser"."check_in_times", "wenkucheckin_baiduuser"."wealth", "wenkucheckin_baiduuser"."ticket", "wenkucheckin_baiduuser"."last_checkin_time" FROM "wenkucheckin_baiduuser"' - PARAMS = (); args=()
